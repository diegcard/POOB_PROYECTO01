#BlueJ class context
comment0.target=Spiderweb
comment0.text=\r\n\ Aqui\ se\ har\u00E1\ el\ simulador\ del\ Spiderweb\r\n\ \r\n\ @author\ Diego\ Cardenas\ y\ Sebastian\ Cardona\ \r\n\ @version\ 1.0\r\n
comment1.params=strands\ radio
comment1.target=Spiderweb(int,\ int)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Spiderweb.\r\n\ Crea\ una\ telara\u00F1a\ con\ un\ n\u00FAmero\ espec\u00EDfico\ de\ hilos\ y\ un\ radio\ dado.\r\n\ La\ telara\u00F1a\ se\ inicializa\ con\ los\ puntos\ de\ inicio\ de\ los\ hilos\ y\ la\ ara\u00F1ita.\r\n\r\n\ @param\ strands\ El\ n\u00FAmero\ de\ hilos\ que\ formar\u00E1n\ la\ telara\u00F1a.\r\n\ @param\ radio\ El\ radio\ de\ la\ telara\u00F1a\ desde\ el\ centro.\r\n
comment10.params=color\ strand
comment10.target=void\ addSpot(java.lang.String,\ int)
comment10.text=\r\n\ \r\n
comment11.params=color
comment11.target=void\ delSpot(java.lang.String)
comment11.text=\r\n\ \r\n
comment12.params=
comment12.target=void\ spiderSit()
comment12.text=\r\n\ \r\n
comment13.params=
comment13.target=boolean\ isSpiderSit()
comment14.params=advance
comment14.target=void\ spiderWalk(boolean)
comment14.text=\r\n\ \r\n
comment15.params=
comment15.target=int[]\ spiderLastPath()
comment15.text=\r\n\ \r\n
comment16.params=
comment16.target=java.lang.String[]\ bridges()
comment16.text=\r\n\ \r\n
comment17.params=color
comment17.target=int[]\ bridge(java.lang.String)
comment17.text=\r\n\ \r\n
comment18.params=
comment18.target=java.lang.String[]\ spots()
comment18.text=\r\n\ \r\n
comment19.params=color
comment19.target=int[]\ spot(java.lang.String)
comment19.text=\r\n\ \r\n
comment2.params=
comment2.target=void\ setCordenateStrands()
comment2.text=\r\n\ Establece\ las\ coordenadas\ de\ los\ puntos\ de\ inicio\ de\ las\ l\u00EDneas\ en\ la\ lista\ de\ l\u00EDneas\ (listaLineas)\r\n\ utilizando\ los\ valores\ de\ las\ coordenadas\ almacenadas\ en\ la\ lista\ 'lis'.\r\n\ Cada\ par\ de\ coordenadas\ (x,\ y)\ en\ 'lis'\ se\ utiliza\ para\ crear\ una\ nueva\ l\u00EDnea\ con\ origen\ en\ esas\ coordenadas\r\n\ y\ se\ agrega\ a\ la\ lista\ de\ l\u00EDneas.\r\n
comment20.params=
comment20.target=void\ finish()
comment20.text=\r\n\ \r\n
comment21.params=
comment21.target=boolean\ ok()
comment3.params=
comment3.target=void\ makeVisible()
comment3.text=\r\n\ Hace\ visible\ todos\ los\ componentes\ del\ simulador.\r\n
comment4.params=
comment4.target=void\ makeInvisible()
comment4.text=\r\n\ Hace\ invisible\ cada\ una\ de\ las\ l\u00EDneas\ en\ la\ lista\ de\ l\u00EDneas.\r\n\ Si\ la\ lista\ de\ l\u00EDneas\ est\u00E1\ vac\u00EDa,\ no\ se\ realiza\ ninguna\ acci\u00F3n.\r\n
comment5.params=firstStrand\ distance\ color
comment5.target=Linea\ createBridge(int,\ int,\ java.lang.String)
comment6.params=color\ distance\ firstStrand
comment6.target=void\ addBridge(java.lang.String,\ int,\ int)
comment6.text=\r\n\ Agrega\ un\ puente\ entre\ dos\ puntos\ en\ la\ pantalla,\ dados\ un\ color,\ una\ distancia\ y\ una\ coordenada\ inicial.\r\n\ El\ puente\ se\ crea\ entre\ la\ coordenada\ inicial\ y\ la\ coordenada\ siguiente\ en\ el\ c\u00EDrculo\ alrededor\ del\ punto\ central.\r\n\ \r\n\ @param\ color\ El\ color\ del\ puente.\r\n\ @param\ distance\ La\ distancia\ desde\ el\ punto\ central\ donde\ se\ ubicar\u00E1\ el\ puente.\r\n\ @param\ firstStrand\ La\ coordenada\ inicial\ del\ puente\ en\ grados\ (de\ 1\ a\ 360)\ alrededor\ del\ punto\ central.\r\n
comment7.params=
comment7.target=int[]\ getPoscenterImage()
comment8.params=color\ distance
comment8.target=void\ relocateBridge(java.lang.String,\ int)
comment8.text=\r\n\ \r\n
comment9.params=color
comment9.target=void\ delBridge(java.lang.String)
comment9.text=\r\n\ Elimina\ un\ puente\ de\ la\ telara\u00F1a\ basado\ en\ su\ color\ y\ c\u00F3digo\ de\ puente.\r\n\r\n\ @param\ color\ El\ color\ del\ puente\ que\ se\ desea\ eliminar.\r\n\ @param\ cod_Bridge\ El\ c\u00F3digo\ del\ puente\ que\ se\ desea\ eliminar.\r\n
numComments=22
